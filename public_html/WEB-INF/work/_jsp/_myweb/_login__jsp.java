/*
 * JSP generated by Resin-3.1.15 (built Mon, 13 Oct 2014 06:45:33 PDT)
 */

package _jsp._myweb;
import javax.servlet.*;
import javax.servlet.jsp.*;
import javax.servlet.http.*;
import java.util.*;
import java.io.*;
import dao.*;
import malgnsoft.db.*;
import malgnsoft.util.*;

public class _login__jsp extends com.caucho.jsp.JavaPage
{
  private static final java.util.HashMap<String,java.lang.reflect.Method> _jsp_functionMap = new java.util.HashMap<String,java.lang.reflect.Method>();
  private boolean _caucho_isDead;
  
  public void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response)
    throws java.io.IOException, javax.servlet.ServletException
  {
    javax.servlet.http.HttpSession session = request.getSession(true);
    com.caucho.server.webapp.WebApp _jsp_application = _caucho_getApplication();
    javax.servlet.ServletContext application = _jsp_application;
    com.caucho.jsp.PageContextImpl pageContext = _jsp_application.getJspApplicationContext().allocatePageContext(this, _jsp_application, request, response, null, session, 8192, true, false);
    javax.servlet.jsp.PageContext _jsp_parentContext = pageContext;
    javax.servlet.jsp.JspWriter out = pageContext.getOut();
    final javax.el.ELContext _jsp_env = pageContext.getELContext();
    javax.servlet.ServletConfig config = getServletConfig();
    javax.servlet.Servlet page = this;
    response.setContentType("text/html; charset=utf-8");
    request.setCharacterEncoding("UTF-8");
    try {
      

    Malgn m = new Malgn(request, response, out);

    Form f = new Form();
    f.setRequest(request);

    Auth auth = new Auth(request, response);
    String userId = null;
    String userSessionId = null;
    SessionDao mSession = new SessionDao(request, response);
    if(auth.isValid()) {
        userId = auth.getString("USER_ID");
        userSessionId = auth.getString("SESSIONID");
    }
//    mSession.put("id", userSessionId);
//    mSession.save();

    Page p = new Page();
    p.setRequest(request);
    p.setWriter(out);
    p.setPageContext(pageContext);

    String sysToday = Malgn.time("yyyyMMdd");
    String sysNow = Malgn.time("yyyyMMddHHmmss");


      

    //\ub85c\uadf8\uc778
    if(null != userId && !"null".equals(userId)) {
        m.redirect("index.jsp");
        return;
    }

    //\uac1d\uccb4
    UserDao user = new UserDao();
//    user.setDebug(out);

    //\ud3fc\uccb4\ud06c
    f.addElement("loginid", null, null);
    f.addElement("passwd", null, null);

    String msg = "";
    //\uc218\uc815
    if(m.isPost() && f.validate()) {
        DataSet info = user.find("login_id = '" + f.get("loginid") + "' AND password = '" + Malgn.encrypt(f.get("passwd"), "sha-256") + "' AND type = 'A'");

        if(!info.next()) { //\ube44\ubc00\ubc88\ud638 \ud2c0\ub9bc
            info = user.find("login_id = '" + f.get("loginid") + "' AND type = 'A'");
            if(!info.next()) {} //\uc874\uc7ac\ud558\uc9c0 \uc54a\ub294 \uc544\uc774\ub514
            else {
                int failCnt = info.i("fail_cnt") + 1;
                if(failCnt > 5) {
                    mSession.put("blocked_time", sysNow);
                    mSession.save();
                    user.item("status", 2);
                    msg = "\ud68c\uc6d0 \uc0c1\ud0dc \ubcc0\uacbd \uc2e4\ud328";
                }
                else {
                    user.item("fail_cnt", failCnt);
                    msg = "\uc2e4\ud328 \ud69f\uc218 \uc124\uc815 \uc2e4\ud328";
                }
            }
            m.jsError("\uc544\uc774\ub514/\ube44\ubc00\ubc88\ud638\ub97c \ud655\uc778\ud574\uc8fc\uc138\uc694.");
        } else {
            //\uc81c\ud55c - 5\ud68c
            if(5 > Malgn.diffDate("I", mSession.get("blocked_time"), sysNow) && 2 == info.i("status")) {
                m.jsAlert("\ube44\ubc00\ubc88\ud638 \uc785\ub825 \ud69f\uc218 \ucd08\uacfc\ub85c 5\ubd84\uac04 \ub85c\uadf8\uc778\uc774 \ucc28\ub2e8\ub429\ub2c8\ub2e4.");
                return;
            } else {
                mSession.put("blocked_time", "");
            }

//            user.item("access_token", m.md5(m.getUniqId()));
//            msg = "Access token \ubc1c\uae09 \uc2e4\ud328";

            auth.put("user_id", info.i("id"));
            auth.put("user_type", info.s("type"));
            auth.save();
            m.jsAlert(info.s("user_nm") + "\ub2d8 \ud658\uc601\ud569\ub2c8\ub2e4!!");
            m.redirect("index.jsp");
            return;
        }
        if(!"".equals(msg) && !user.update("id = " + info.s("id"))) { m.jsAlert(msg); return; };
        return;
    }

    p.setLayout("blank");
    p.setBody("main.login");

    p.setVar("form_script", f.getScript());
    p.display();

    } catch (java.lang.Throwable _jsp_e) {
      pageContext.handlePageException(_jsp_e);
    } finally {
      _jsp_application.getJspApplicationContext().freePageContext(pageContext);
    }
  }

  private java.util.ArrayList _caucho_depends = new java.util.ArrayList();

  public java.util.ArrayList _caucho_getDependList()
  {
    return _caucho_depends;
  }

  public void _caucho_addDepend(com.caucho.vfs.PersistentDependency depend)
  {
    super._caucho_addDepend(depend);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
  }

  public boolean _caucho_isModified()
  {
    if (_caucho_isDead)
      return true;
    if (com.caucho.server.util.CauchoSystem.getVersionId() != 6749855747778707107L)
      return true;
    for (int i = _caucho_depends.size() - 1; i >= 0; i--) {
      com.caucho.vfs.Dependency depend;
      depend = (com.caucho.vfs.Dependency) _caucho_depends.get(i);
      if (depend.isModified())
        return true;
    }
    return false;
  }

  public long _caucho_lastModified()
  {
    return 0;
  }

  public java.util.HashMap<String,java.lang.reflect.Method> _caucho_getFunctionMap()
  {
    return _jsp_functionMap;
  }

  public void init(ServletConfig config)
    throws ServletException
  {
    com.caucho.server.webapp.WebApp webApp
      = (com.caucho.server.webapp.WebApp) config.getServletContext();
    super.init(config);
    com.caucho.jsp.TaglibManager manager = webApp.getJspApplicationContext().getTaglibManager();
    com.caucho.jsp.PageContextImpl pageContext = new com.caucho.jsp.PageContextImpl(webApp, this);
  }

  public void destroy()
  {
      _caucho_isDead = true;
      super.destroy();
  }

  public void init(com.caucho.vfs.Path appDir)
    throws javax.servlet.ServletException
  {
    com.caucho.vfs.Path resinHome = com.caucho.server.util.CauchoSystem.getResinHome();
    com.caucho.vfs.MergePath mergePath = new com.caucho.vfs.MergePath();
    mergePath.addMergePath(appDir);
    mergePath.addMergePath(resinHome);
    com.caucho.loader.DynamicClassLoader loader;
    loader = (com.caucho.loader.DynamicClassLoader) getClass().getClassLoader();
    String resourcePath = loader.getResourcePathSpecificFirst();
    mergePath.addClassPath(resourcePath);
    com.caucho.vfs.Depend depend;
    depend = new com.caucho.vfs.Depend(appDir.lookup("myweb/login.jsp"), -6589035801486563678L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
    depend = new com.caucho.vfs.Depend(appDir.lookup("myweb/init.jsp"), 5066274978116153783L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
  }
}
